#chat-screen {
  background-color: #abc1d1;
  height: 500vh;
  /* padding-top: 20px; */
}

#chat-screen .alt-header,
#chat-screen .status-bar {
  top: 0;
  position: fixed;
  width: 100%;
  box-sizing: border-box;
  background-color: #abc1d1;
}
#chat-screen .status-bar {
  z-index: 2;
}
#chat-screen .alt-header {
  /* top: 10px; */
  z-index: 1;
  padding-top: 40px;
}

.main-chat {
  display: flex;
  flex-direction: column;
  align-items: center;
}
/* message row는 좌우로만 움직이게 하기위해 타임스탬프에 아래서 위로 올라가는 fadeIn을 줌*/
.chat__timestamp {
  color: white;
  background-color: #92a4b2;
  /* text-align: center; */
  padding: 15px;
  font-size: 14px;
  border-radius: 25px;
  margin-bottom: 25px;
  animation: fadeIn 0.8s linear;
}
.message-row {
  width: 100%;
  display: flex;
  margin-bottom: 25px;
  animation: fadeInLeft 1s linear;
}
.message-row img {
  width: 50px;
  height: 50px;
  border-radius: 30%;
  margin-right: 15px;
}
.message__author {
  margin-bottom: 8px;
  display: block;
}
.message__bubble {
  background-color: white;
  padding: 13px;
  font-size: 18px;
  border-radius: 15px;
  border-top-left-radius: 0px;
  margin-right: 5px;
}
.message__info {
  display: flex;
  align-items: flex-end;
}
.message__author,
.message__time {
  opacity: 0.6;
  font-size: 14px;
}
.message-row--own {
  justify-content: flex-end;
  animation: fadeInRight 1s linear;
}
/* order를 통해 순서를 바꿔준다. 코드가 많이 필요하므로 다른것을 이요해보자 */
.message-row--own .message__bubble {
  background-color: var(--yellow);
  border-top-right-radius: 0;
  border-top-left-radius: 15px;
  margin-left: 15px;
  /* order: 1; */
}
/* .message-row--own .message-time {
  order: 0;
} */
/* order 대신에 reverse를 이용 */
.message-row--own .message__info {
  flex-direction: row-reverse;
}

/* 텍스트 입력란 */
.reply {
  position: fixed;
  bottom: 0;
  width: 100%;
  background-color: white;
  display: flex;
  justify-content: space-between;
  padding: 5px 25px;
  box-sizing: border-box;
  align-items: center;
  transition: all 0.3s ease-in-out;
}
.reply .reply__column:first-child {
  width: 10%;
}
.reply .reply__column:last-child {
  width: 90%;
  position: relative;
}
.reply input {
  width: 100%;
  border: var(--main-border);
  border-radius: 20px;
  box-sizing: border-box;
  padding: 14px;
  transition: all 0.3s ease-in-out;
}
.reply input::placeholder {
  opacity: 0.7;
}
.reply__column:last-child > i,
.reply__column:last-child button {
  position: absolute;
  right: 3px;
  top: 3px;
}
.reply__column:last-child > i {
  right: 50px;
  top: 15px;
}
.reply__column button {
  background-color: var(--yellow);
  border: none;
  width: 40px;
  height: 40px;
  border-radius: 50%;
}
.reply__column button:focus,
.reply__column button:active {
  outline: none;
}
.reply i {
  opacity: 0.5;
}
.reply__column button i {
  opacity: 1;
}
/* focus within -> focus-within이 지정된 요소에 포커스 되면  특정 애니메이션을 수행한다.*/

.reply .reply__column:first-child,
.reply .fa-smile-beam,
.reply button {
  transition: opacity 0.3s ease-in-out;
}

.reply:focus-within .reply__column:first-child,
.reply:focus-within .fa-smile-beam,
.reply:focus-within button {
  opacity: 0;
}

.reply:focus-within input {
  width: 98vw;
  transform: translateX(-13%) translateY(-80px);
}
.reply:focus-within {
  transform: translateY(80px);
}
